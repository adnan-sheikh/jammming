{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","event","setState","target","value","className","type","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","e","newName","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","process","fetch","headers","Authorization","then","response","json","jsonRespnse","items","artists","uri","savePlaylist","trackUris","length","userId","jsonResponse","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filteredTrack","filter","currentTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53cc8289.chunk.js","sourcesContent":["const clientId = process.env.REACT_APP_SPOTIFY_API_KEY;\r\nconst redirectUri = 'https://adnan-sheikh.github.io/jammming/';\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    // check for access token match\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      // This clears the parameters, allowing us to grab a new access token when it expires.\r\n      window.setTimeout(() => (accessToken = ''), expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return accessToken;\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: { Authorization: `Bearer ${accessToken}` },\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonRespnse) => {\r\n        if (!jsonRespnse.tracks) {\r\n          return [];\r\n        }\r\n        return jsonRespnse.tracks.items.map((track) => ({\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n        }));\r\n      });\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n\r\n    return fetch('https://api.spotify.com/v1/me', { headers: headers })\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        userId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({ name: name }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((jsonResponse) => {\r\n            const playlistId = jsonResponse.id;\r\n            return fetch(\r\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n              {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ uris: trackUris }),\r\n              }\r\n            );\r\n          });\r\n      });\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","import \"./SearchBar.css\";\r\nimport React from \"react\";\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {term: ''};\r\n    this.search = this.search.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n  }\r\n\r\n  search() {\r\n    this.props.onSearch(this.state.term)\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({term: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Enter a Song, Album, or Artist\"\r\n          onChange={this.handleTermChange}\r\n        />\r\n        <button className=\"SearchButton\" onClick={this.search} >SEARCH</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./Track.css\";\r\nimport React from \"react\";\r\n\r\nexport class Track extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n  }\r\n\r\n  addTrack() {\r\n    this.props.onAdd(this.props.track);\r\n  }\r\n\r\n  removeTrack() {\r\n    this.props.onRemove(this.props.track);\r\n  }\r\n\r\n  renderAction() {\r\n    if (this.props.isRemoval) {\r\n      return <button className=\"Track-action\" onClick={this.removeTrack} >-</button>;\r\n    } else {\r\n      return <button className=\"Track-action\" onClick={this.addTrack} >+</button>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h3>{this.props.track.name}</h3>\r\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n        </div>\r\n        {this.renderAction()}\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./TrackList.css\";\r\nimport React from \"react\";\r\nimport { Track } from \"../Track/Track\";\r\n\r\nexport class TrackList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"TrackList\">\r\n        {\r\n          this.props.tracks.map(track => {\r\n            return <Track track={track} key={track.id} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval} />\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./SearchResults.css\";\r\nimport React from \"react\";\r\nimport { TrackList } from \"../TrackList/TrackList\";\r\n\r\nexport class SearchResults extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"SearchResults\">\r\n        <h2>Results</h2>\r\n        <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false} />\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./Playlist.css\";\r\nimport React from \"react\";\r\nimport { TrackList } from \"../TrackList/TrackList\";\r\n\r\nexport class Playlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  handleNameChange(e) {\r\n    let newName = e.target.value;\r\n    this.props.onNameChange(newName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input type=\"text\" defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\r\n        <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true} />\r\n        <button className=\"Playlist-save\" onClick={this.props.onSave} >SAVE TO SPOTIFY</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import \"./App.css\";\nimport React from \"react\";\nimport { SearchBar } from \"../SearchBar/SearchBar\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Playlist } from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'Playlist',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => {\n      return savedTrack.id === track.id;\n    })) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    const filteredTrack = tracks.filter(currentTrack => {\n      return currentTrack.id !== track.id;\n    });\n    this.setState({playlistTracks: filteredTrack});\n  }\n\n  updatePlaylistName(newName) {\n    this.setState({playlistName: newName});\n  }\n\n  savePlaylist() {\n    if (!this.state.playlistTracks.length) {\n      return;\n    }\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(term) {\n    if (!term) {\n      return;\n    }\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults});\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar\n            onSearch={this.search} \n          />\n          <div className=\"App-playlist\">\n            <SearchResults \n              searchResults={this.state.searchResults} \n              onAdd={this.addTrack}\n            />\n            <Playlist \n              playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks} \n              onRemove={this.removeTrack} \n              onNameChange={this.updatePlaylistName} \n              onSave={this.savePlaylist} \n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}